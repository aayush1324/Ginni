# # Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# # More GitHub Actions for Azure: https://github.com/Azure/actions

# # name: Build and deploy Node.js app to Azure Web App - GinniFrontend
# name: Deploy to IIS Server


# on:
#   push:
#     branches:
#       - main      # Change this to your desired branch name
#   workflow_dispatch:    #delete

# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Node.js version
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20.x'

#       - name: npm install, build, and test
#         run: |
#           npm install
#           npm run build --if-present
#           npm run test --if-present
      
#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v3
#         with:
#           name: node-app
#           path: .

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#     permissions:
#       id-token: write #This is required for requesting the JWT

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v3
#         with:
#           name: node-app
      
#       - name: Login to Azure
#         uses: azure/login@v1
#         with:
#           client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FD7677C951774CAEA9382D9753764809 }}
#           tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F40581BE25C249E0AA62B14CDC2F5549 }}
#           subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_05B3A27A03E9446D8F5A6E8F9400178B }}

#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v2
#         id: deploy-to-webapp
#         with:
#           app-name: 'GinniFrontend'
#           slot-name: 'Production'
#           package: .
          

name: Deploy to IIS Server

on:
  push:
    branches:
      - main  # Change this to your desired branch name
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the latest code from your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment to build the Angular project
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Ensure the version is compatible with your Angular project

      # Step 3: Install dependencies and build the project
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --prod          # Use appropriate build command for Angular
          npm run test --if-present
      
      # Step 4: Upload build artifact for deployment
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: angular-app
          path: dist/ginni  # Replace with your actual Angular project's output folder

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      # Step 5: Download the build artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: angular-app
      
      # Step 6: Deploy via FTP to IIS server
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ftp://ginnidryfruits.com  # Replace with your server's IP or hostname
          username: ${{ secrets.FTP_USERNAME }}   # Store your FTP username as a GitHub secret
          password: ${{ secrets.FTP_PASSWORD }}   # Store your FTP password as a GitHub secret
          local-dir: dist/ginni                   # Replace with your Angular project's output folder
          server-dir: C:\inetpub\wwwroot\ginni\browser   # Specify the target directory on your IIS server
          
