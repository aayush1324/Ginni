name: FTP IIS server

on:
  push:
    branches:
      - main  # Change this to your desired branch name

env:
  CI: false
  
jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the latest code from your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment to build the Angular project
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Ensure the version is compatible with your Angular project

      # Step 3: Install dependencies and build the project
      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Build project
        run: npm run build --prod  # Ensure you're building in production mode

      # Step 4: Upload build artifact for deployment
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: angular-app
          path: dist/ginni  # Replace with your actual Angular project's output folder

  deploy:
    name: Deploy
    runs-on: windows-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 5: Download the build artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: angular-app
          path: dist/ginni

      # Step 6: Deploy via FTP to IIS server
      - name: Deploy to IIS via FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          server: ${{ secrets.FTP_SERVER }}   # Example: ftp://yourdomain.com/public_html
          username: ${{ secrets.FTP_USERNAME }}   # FTP username
          password: ${{ secrets.FTP_PASSWORD }}   # FTP password
          local-dir: dist/ginni/  # Replace with your actual Angular project's output folder
          server-dir: /wwwroot  # Replace with the path to your web root on the server
